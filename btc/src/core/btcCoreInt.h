/*
 * Secalot firmware.
 * Copyright (c) 2017 Matvey Mukha <matvey.mukha@gmail.com>
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

#ifndef __BTC_CORE_INT_H__
#define __BTC_CORE_INT_H__

#define BTC_CORE_SW_REMAINING_PIN_TRIES (0x63C0)

#define BTC_CORE_CLA (0xE0)

#define BTC_CORE_INS_SETUP (0x20)
#define BTC_CORE_INS_VERIFY_PIN (0x22)
#define BTC_CORE_INS_GET_WALLET_PUBLIC_KEY (0x40)
#define BTC_CORE_INS_GET_TRUSTED_INPUT (0x42)
#define BTC_CORE_INS_UNTRUSTED_HASH_TRANSACTION_INPUT_START (0x44)
#define BTC_CORE_INS_UNTRUSTED_HASH_TRANSACTION_INPUT_FINALIZE_FULL (0x4A)
#define BTC_CORE_INS_UNTRUSTED_HASH_SIGN (0x48)
#define BTC_CORE_INS_SIGN_MESSAGE (0x4E)
#define BTC_CORE_INS_GET_FIRMWARE_VERSION (0xC4)
#define BTC_CORE_INS_SET_KEYBOARD_CONFIGURATION (0x28)
#define BTC_CORE_INS_GET_RANDOM (0xC0)
#define BTC_CORE_INS_READ_TRANSACTION (0xE0)

#define BTC_CORE_P1P2_SETUP_REGULAR_SETUP (0x0000)
#define BTC_CORE_P1P2_VERIFY_PIN (0x0000)
#define BTC_CORE_P1P2_VERIFY_PIN_GET_REMAINING_ATTEMPTS (0x8000)
#define BTC_CORE_P1P2_GET_WALLET_PUBLIC_KEY (0x0000)
#define BTC_CORE_P1P2_GET_TRUSTED_INPUT_FIRST_BLOCK (0x0000)
#define BTC_CORE_P1P2_GET_TRUSTED_INPUT_SUBSEQUENT_BLOCK (0x8000)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_START_START_NEW_TRANACTION_FIRST_BLOCK (0x0000)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_START_START_NEW_TRANACTION_FIRST_BLOCK_SEGWIT (0x0002)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_START_START_NEW_TRANACTION_SUBSEQUENT_BLOCK (0x8000)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_START_ANOTHER_TRANACTION_FIRST_BLOCK (0x0080)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_START_ANOTHER_TRANACTION_SUBSEQUENT_BLOCK (0x8080)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_FINALIZE_FULL_LAST_BLOCK (0x8000)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_TRANSACTION_INPUT_FINALIZE_FULL_MORE_BLOCKS_TO_COME (0x0000)
#define BTC_CORE_P1P2_UNTRUSTED_HASH_SIGN (0x0000)
#define BTC_CORE_P1P2_SIGN_MESSAGE_PREPARE_MESSAGE (0x0000)
#define BTC_CORE_P1P2_SIGN_MESSAGE_SIGN_MESSAGE (0x8000)
#define BTC_CORE_P1P2_GET_FIRMWARE_VERSION (0x0000)
#define BTC_CORE_P1P2_GET_RANDOM (0x0000)
#define BTC_CORE_P1P2_READ_TRANSACTION_INFO (0x0000)
#define BTC_CORE_P1P2_READ_TRANSACTION_DATA (0x0100)
#define BTC_CORE_P1P2_READ_TRANSACTION_AMOUNTS (0x0200)

#define BTC_CORE_GET_FIRMWARE_VERSION_RESPONSE   \
    {                                            \
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 \
    }
#define BTC_CORE_GET_FIRMWARE_VERSION_SPECIAL_VERSION_OFFSET (0x01)
#define BTC_CORE_GET_FIRMWARE_VERSION_SPECIAL_VERSION_WALLET_OPERATIONAL (0x01)
#define BTC_CORE_GET_FIRMWARE_VERSION_SPECIAL_VERSION_PIN_VERIFIED (0x02)

#define BTC_CORE_MODE_WALLET_MODE (0x01)

#define BTC_CORE_FEATURES_DETERMINISTIC_SIGNATURE (0x02)
#define BTC_CORE_FEATURES_RELAXED_P2SH (0x08)

#define BTC_CORE_SEED_NOT_TYPED_TO_THE_USER (0x00)

#define BTC_CORE_AID                                         \
    {                                                        \
        0x42, 0x54, 0x43, 0x41, 0x50, 0x50, 0x4C, 0x45, 0x54 \
    }
#define BTC_CORE_AID_LENGTH (0x09)

#define BTC_CORE_TRANSACTION_READ_CHUNK_SIZE (128)
#define BTC_CORE_TRANSACTION_READ_NUMBER_OF_CHUNKS (BTC_TRAN_MAX_VIEWABLE_TRANSACTION_SIZE/BTC_CORE_TRANSACTION_READ_CHUNK_SIZE)


#endif /* __BTC_CORE_INT_H__ */
